{"version":3,"sources":["components/api/Fetching.js","components/comment/Comment.js","components/commentList/CommentList.js","components/user/User.js","components/post/Post.js","components/postList/PostList.js","App.js","index.js"],"names":["postsUrl","usersUrl","commentsUrl","fetchData","url","fetch","then","response","json","Comment","_ref","_ref$comment","comment","name","body","email","react_default","a","createElement","Fragment","CommentList","commentList","className","map","comment_Comment","key","id","User","_ref$user","user","address","href","street","city","suite","Post","_ref$post","post","title","comments","user_User","commentList_CommentList","PostList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchByTitleAndBody","event","setState","search","target","value","state","_this2","filteredPosts","posts","filter","includes","searchInput","type","placeholder","onChange","aria-hidden","length","post_Post","React","Component","App","loadData","loading","Promise","all","_ref2","slicedToArray","postsItems","usersItems","commentsItems","postList","_objectSpread","find","userId","postId","_this$state","postList_PostList","onClick","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8OAAMA,SAAW,8CACXC,EAAW,6CACXC,EAAc,gDAEpB,SAASC,EAAUC,GACjB,OAAOC,MAAMD,GACVE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SCehBC,MAlBf,SAAAC,GAAqD,IAAAC,EAAAD,EAAlCE,QAAWC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,MACxC,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIH,GACJC,EAAAC,EAAAC,cAAA,SAAIJ,KCUKM,MAdf,SAAAV,GAAsC,IAAfW,EAAeX,EAAfW,YACrB,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACZD,EAAYE,IAAI,SAAAX,GAAO,OACtBI,EAAAC,EAAAC,cAACM,EAAD,CAASZ,QAASA,EAASa,IAAKb,EAAQc,SCkBjCC,MAvBf,SAAAjB,GAAkD,IAAAkB,EAAAlB,EAAlCmB,KAAQhB,EAA0Be,EAA1Bf,KAAME,EAAoBa,EAApBb,MAAOe,EAAaF,EAAbE,QACnC,OACEd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,KAAGa,KAAK,kBAAkBhB,GAC1BC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,uBAAeY,EAAQE,QAAchB,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,qBAAaY,EAAQG,MAAYjB,EAAAC,EAAAC,cAAA,WACjCF,EAAAC,EAAAC,cAAA,sBAAcY,EAAQI,OAAalB,EAAAC,EAAAC,cAAA,cCkB5BiB,MAxBf,SAAAzB,GAAyD,IAAA0B,EAAA1B,EAAzC2B,KAAQC,EAAiCF,EAAjCE,MAAOxB,EAA0BsB,EAA1BtB,KAAMe,EAAoBO,EAApBP,KAAMU,EAAcH,EAAdG,SACzC,OACEvB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,UAAKoB,GACLtB,EAAAC,EAAAC,cAAA,SAAIJ,GACJE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAD,CAAMX,KAAMA,KAEdb,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACuB,EAAD,CAAapB,YAAakB,IAC1BvB,EAAAC,EAAAC,cAAA,aC+CSwB,cAzDb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,qBAAuB,SAACC,GACtBR,EAAKS,SAAS,CACZC,OAAQF,EAAMG,OAAOC,SAPvBZ,EAAKa,MAAQ,CACXH,OAAQ,IAJOV,wEAcV,IAAAc,EAAAX,KACDY,EAAgBZ,KAAKJ,MAAMiB,MAAMC,OAAO,SAAAxB,GAAI,OAChDA,EAAKC,MAAMwB,SAASJ,EAAKD,MAAMH,SAC5BjB,EAAKvB,KAAKgD,SAASJ,EAAKD,MAAMH,UAG7BS,EACJ/C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACL1C,UAAU,QACV2C,YAAY,SACZC,SAAUnB,KAAKI,uBAEjBnC,EAAAC,EAAAC,cAAA,KAAGiD,cAAY,OAAO7C,UAAU,iBAIpC,OAAKqC,EAAcS,OAUjBpD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG4C,EAEAJ,EAAcpC,IAAI,SAAAc,GAAI,OACrBrB,EAAAC,EAAAC,cAACmD,EAAD,CAAM5C,IAAKY,EAAKX,GAAIW,KAAMA,OAZ5BrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG4C,EACD/C,EAAAC,EAAAC,cAAA,KAAGI,UAAU,eAAb,4BArCagD,IAAMC,2OCqEdC,cA9Db,SAAAA,EAAY7B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACjB5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAMJ,KAQR8B,SAAW,WACT7B,EAAKS,SAAS,CACZqB,SAAS,IAGXC,QAAQC,IAAI,CNfAzE,EAAUH,GAMVG,EAAUF,GAMPE,EAAUD,KMItBI,KAAK,SAAAI,GAA6C,IAAAmE,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAnC,EAAA,GAA3CqE,EAA2CF,EAAA,GAA/BG,EAA+BH,EAAA,GAAnBI,EAAmBJ,EAAA,GAC3CK,EAAWH,EAAWxD,IAAI,SAAAc,GAAI,4VAAA8C,CAAA,GAC/B9C,EAD+B,CAElCR,KAAMmD,EAAWI,KAAK,SAAAvD,GAAI,OAAIA,EAAKH,KAAOW,EAAKgD,SAC/C9C,SAAU0C,EAAcpB,OAAO,SAAAjD,GAAO,OAAIA,EAAQ0E,SAAWjD,EAAKX,SAGpEkB,EAAKS,SAAS,CACZ6B,WACAR,SAAS,OArBf9B,EAAKa,MAAQ,CACXiB,SAAS,EACTQ,SAAU,IALKtC,wEA6BV,IAAA2C,EACuBxC,KAAKU,MAA3ByB,EADDK,EACCL,SAAUR,EADXa,EACWb,QAElB,OAAKQ,EAASd,OAuBZpD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACsE,EAAD,CAAU5B,MAAOsB,KAvBfR,EAEA1D,EAAAC,EAAAC,cAAA,UACE8C,KAAK,SACL1C,UAAU,0BACVmE,QAAS1C,KAAK0B,WAKhBzD,EAAAC,EAAAC,cAAA,UACE8C,KAAK,SACL1C,UAAU,YACVmE,QAAS1C,KAAK0B,UAHhB,qBA5CQH,IAAMC,WCNxBmB,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.aab6cdac.chunk.js","sourcesContent":["const postsUrl = 'https://jsonplaceholder.typicode.com/posts';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\nconst commentsUrl = 'https://jsonplaceholder.typicode.com/comments';\n\nfunction fetchData(url) {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nfunction fetchPosts() {\n  const posts = fetchData(postsUrl);\n\n  return posts;\n}\n\nfunction fetchUsers() {\n  const users = fetchData(usersUrl);\n\n  return users;\n}\n\nfunction fetchComments() {\n  const comments = fetchData(commentsUrl);\n\n  return comments;\n}\n\nexport { fetchPosts, fetchUsers, fetchComments };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ comment: { name, body, email } }) {\n  return (\n    <>\n      <h4>{name}</h4>\n      <p>{email}</p>\n      <p>{body}</p>\n    </>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport Comment from '../comment/Comment';\n\nfunction CommentList({ commentList }) {\n  return (\n    <div className=\"ui comments\">\n      {commentList.map(comment => (\n        <Comment comment={comment} key={comment.id} />\n      ))}\n    </div>\n  );\n}\n\nCommentList.propTypes = {\n  commentList: Proptypes.arrayOf(Proptypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user: { name, email, address } }) {\n  return (\n    <>\n      <h4>{name}</h4>\n      <a href=\"mailto:{email}\">{email}</a>\n      <p>\n        <span>Street: {address.street}</span><br />\n        <span>City: {address.city}</span><br />\n        <span>Suite: {address.suite}</span><br />\n      </p>\n    </>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentList from '../commentList/CommentList';\nimport User from '../user/User';\n\nfunction Post({ post: { title, body, user, comments } }) {\n  return (\n    <div className=\"ui card\">\n      <h2>{title}</h2>\n      <p>{body}</p>\n      <div>\n        <User user={user} />\n      </div>\n      <h3>Comments</h3>\n      <CommentList commentList={comments} />\n      <hr />\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../post/Post';\n\nclass PostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      search: '',\n    };\n  }\n\n  searchByTitleAndBody = (event) => {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  render() {\n    const filteredPosts = this.props.posts.filter(post => (\n      post.title.includes(this.state.search)\n      || post.body.includes(this.state.search)\n    ));\n\n    const searchInput = (\n      <div className=\"ui icon input\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search\"\n          onChange={this.searchByTitleAndBody}\n        />\n        <i aria-hidden=\"true\" className=\"search icon\" />\n      </div>\n    );\n\n    if (!filteredPosts.length) {\n      return (\n        <>\n          {searchInput}\n          <p className=\"searchError\">No match founded</p>\n        </>\n      );\n    }\n\n    return (\n      <>\n        {searchInput}\n\n        {filteredPosts.map(post => (\n          <Post key={post.id} post={post} />\n        ))}\n      </>\n    );\n  }\n}\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport {\n  fetchPosts,\n  fetchUsers,\n  fetchComments\n} from './components/api/Fetching';\nimport PostList from './components/postList/PostList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      postList: [],\n    };\n  }\n\n  loadData = () => {\n    this.setState({\n      loading: true,\n    });\n\n    Promise.all([fetchPosts(), fetchUsers(), fetchComments()])\n      .then(([postsItems, usersItems, commentsItems]) => {\n        const postList = postsItems.map(post => ({\n          ...post,\n          user: usersItems.find(user => user.id === post.userId),\n          comments: commentsItems.filter(comment => comment.postId === post.id),\n        }));\n\n        this.setState({\n          postList,\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const { postList, loading } = this.state;\n\n    if (!postList.length) {\n      if (loading) {\n        return (\n          <button\n            type=\"button\"\n            className=\"ui basic loading button\"\n            onClick={this.loadData}\n          />\n        );\n      } else {\n        return (\n          <button\n            type=\"button\"\n            className=\"ui button\"\n            onClick={this.loadData}\n          >\n            Load Posts\n          </button>\n        );\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <PostList posts={postList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}